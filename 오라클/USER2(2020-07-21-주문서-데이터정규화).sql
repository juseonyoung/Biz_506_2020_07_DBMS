-- 여기는 user2 화면입니다. !


-- 엑셀을 이용하여 상품코드 칼럼에 다수의 상품코드가 저장된 것을 
-- 상품코드1~상품코드3 칼럼으로 분리하여 데이터를 생성하였고 그 생성한 데이터를 DB에 import하기 위해 테이블을 생성했음

create table tbl_주문서원장 ( --pk설정 안하고 타입만 저장해놓음
  
    주문번호 char(6),
    거래일자 char(10),
    고객코드 char(5),
    고객명 nVARCHAR2(125),
    연락처	VARCHAR2(20),
    상품코드	VARCHAR2(125),
    상품코드1	char(6),
    상품코드2	char(6),
    상품코드3   char(6)
);


-- 엑셀파일로 부터 생성한 ㄷㅔ이터를 임포트 하여 준비해 놓은 상태
-- 제 1정규화 수행
-- 현재 주문서 원장 table에 상품코드1,코드2, 코드3 칼럼이 있는데 주문 건당 판매되는 상품이 3개이면
-- 모든 칼럼에 데이터가 채워질 것이고, 
-- 1) 건당 판매되는 상품이 1개나 2개면 나머지 공간은 null값을 가지게 된다. 
-- 2) 또는 건당 판매되는 상품이 3개보다 많아지면 이 테이블은 칼럼을 추가하는 alter table 명령을 수행해야 한다. 
-- 위와 같은 상황이 발생되는 db는 설계상 매우 부적절한 경우가 되며 데이터 무결성을 유지하는데도 매우 좋지 않은 상황이된다.


-- 상품주문서 라는 table을 생성하여 
-- 만약 2가지 상품이 주문되었으면 
-----------------------------------------------------
-- 주문번호      상품코드
-- O00001        P0001
-- O00001        P0010
----------------------------------------------------
--와 같은 형식의 테이블을 만들고 데이터를 분리한 다음 주문원장과 연결하는 작업을 수행해야 한다. 
-- 상품코드가 여러개 일 경우 같은 주문번호를 기준으로 여러개의 레코드가 만들어지는 방식으로 생성한다. 

select *--union all 세개 쿼리를 모두 묶어서 그룹으로 만들어라 

from
(
        select 주문번호, 상품코드1 AS O_PCODE--코드1만 담겨있는 테이블
        from tbl_주문서원장
        
        union all
        
        select 주문번호, 상품코드2
        from tbl_주문서원장
        where 상품코드2 is not null --null이 아닌 경우만 표시해라 
        
        union all
        select 주문번호, 상품코드3
        from tbl_주문서원장
        where 상품코드3 is not null --null이 아닌 경우만 표시해라 

)
order by 주문번호;


--주문서원장에서 데이터를 분리하여 주문번호, 상품코드 데이터를 추출하고 원하는 제1정규화를 수행했다.
-- 상품주문 테이블 데이터를 만들었는데 이 테이블은 주문번호, 상품코드, 실제판매가격 3개의 칼럼을 가진다. 
-- 테이블을 만들고 보니, 상품코드에 해당하는 상품명과 판매가격이 없어서 보기가 불편하다. 
-- 임의로 상품명, 판매가격 칼럼을 추가하고 데이터를 새롭게 만들었다. 

-- 주문번호, 상품코드, 상품명, 판매가격, 실제판매가격 칼럼을 가진 데이터 테이블이 되었다. 
-- 이 테이블에 PK를 설정하려고 후보키를 찾아보았더니 단독칼럼으로는 pk로 만들 수 가 없다. 
-- 그래서 어쩔 수 없이 주문번호, 상품코드 2개의 칼럼을 복합키로 하여 pk를 설정했다. 

-- 데이터를 검증하는 작업을 수행한다. 
-- 실제판매가격 = f(주문번호, 상품코드) 와 같은 함수가 있다면 
-- 주문번호와 상품코드를 매개변수로 전달하여 결과로 실제 판매가격을 추출할 수 있게 되었다. 

-- 그런데, 상품명과 판매가격은 굳이 주문번호를 몰라도 상품코드만으로 해당데이터를 추출할 수 있다!
-- 상품명 =f1(상품코드), 판매가격 = f2(상품코드) 형식의 함수만 있더라도 해당 데이터를 추출할 수 있다. 
-- pk로 설정된 두개의 키값이 없어도 상품명과 판매가격을 조회할 수 있다는 이야기는 
-- 이 테이블이 제2정규화 규칙에 어긋난다는 뜻 !!!

-- 실제판매가격 =f(주문번호, 상품코드)를 호출하여 결과를 얻을 수 있는 상태를 "완전함수종속성"이라고 하며,
-- 상품명 =f1(상품코드), 판매가격 = f2(상품코드)를 호출하여 결과를 얻을 수 잇는 상태를 "부분함수종속성"이라고 한다. 
-- 제 2정규화는 현재 테이블에서 "부분함수종속성" 특성을 제거하는 것이다. 
-- 따라서 현재테이블의 상품코드, 상품명, 판매가격 칼럼을 분리하여 "상품정보" 테이블로 보내고 
-- 현재 테이블에는 주문번호, 상품코드, 실제판매가격 칼럼만 남겨놓는 것이다.-->> 이 상태를 제2정규화 완성이라고 한다. 

-- 정규화의 가장 큰 목적!
-- 추가 이상: 데이터를 추가할 때 임의 칼럼 값이 정해지지 않아 null값이 추가되는 현상
-- 갱신 이상: 데이터를 변경할 때 2개 이상의 레코드가 변경되고, 이 때문에 원치않는 데이터에 변경이 수행되는 현상
-- 삭제 이상: 어떤 레코드를 삭제하면 그로 인해 다른 정보를 조회할 수 없게 되는 현상
--      상품정보 레코드를 제거하면, 그 상품의 판매데이터는 쓸모없는 데이터가 된다. 
--      같은 테이블에 상품이름, 주매입처 와 같은 칼럼이 존재할 때 해당 레코드를 삭제 해 버리면 주 매입처 정보가 같이 사라지는 현상
-- 이러한 이상현상을 방지하기 위해 정규화를 사용한다. 

-- 데이터의 칼럼들에 필요없는 칼럼이 존재하여 해당 칼럼 값이 null로 채워지는 것을 방지하는 목적이다.
-- 데이터 베이스 성능, 효율과 관련된다. 

-- 정보처리 기사 DB 출제문제[반부이다조]
-- 제1정규화,                                           제2정규화,                                           제3정규화 ,
-- 반복종속성 제거                                     부분종속성 제거 (2,3차이는 원본데이터유무)         이행적함수 제거
-- 한칼럼에 두개 이상 들어있는 값을 제거

--   BCNF,                                   제4정규화,                         제5정규화
--후보키가 아닌 결정자 제거                  다치중속제거                    조인종속성 이용



select * from tbl_주문서원장;










